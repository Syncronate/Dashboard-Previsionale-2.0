name: Scheduled Seq2Seq Hydrological Prediction (WITH DEBUG)

on:
  workflow_dispatch:

jobs:
  run-prediction:
    runs-on: ubuntu-latest
    
    env:
      GSHEET_ID: ${{ secrets.GSHEET_ID }}
      PYTHONUNBUFFERED: 1

    steps:
    # 1. Scarica il codice. Aggiungeremo 'lfs: true' dopo per sicurezza.
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        lfs: true # Aggiunto per gestire il caso Git LFS

    # 2. Imposta Python
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    # NUOVO STEP DI DEBUG: Questo stamperà tutti i file e le cartelle
    - name: "Debug: List all files in the repository"
      run: ls -lR
      # ls -> comado "lista"
      # -l -> formato lungo (mostra dettagli come la dimensione)
      # -R -> ricorsivo (mostra anche il contenuto delle sottocartelle)

    # 3. Installa le dipendenze
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install torch torchvision torchaudio --index-url https://download.pytorch.org/whl/cpu
        pip install pandas numpy scikit-learn joblib gspread google-auth-oauthlib pytz google-api-python-client

    # 4. Crea il file per le credenziali
    - name: Create Google Credentials File
      run: echo '${{ secrets.GCP_CREDENTIALS_JSON }}' > credentials.json
      shell: bash

    # 5. Esegue lo script
    - name: Run Seq2Seq prediction script
      run: python run_seq2seq_prediction.py```

### Cosa Devi Fare Adesso:

1.  **Usa il file YML qui sopra.** L'unica differenza per te è il nuovo step "Debug: List all files". Ho anche aggiunto `lfs: true` al checkout per risolvere preventivamente il problema più probabile.
2.  **Esegui di nuovo l'azione** da GitHub.
3.  **L'azione probabilmente fallirà di nuovo**, ma non importa. Clicca sui dettagli dell'esecuzione e **apri il log dello step "Debug: List all files"**.

### Cosa Controllare nel Log di Debug:

Questo log è la tua "scatola nera". Ti mostrerà la verità. Controlla:

*   **Esiste la cartella `models`?** Il nome è tutto in minuscolo?
*   **Guarda il contenuto di `./models`:** Ci sono i 5 file? I loro nomi sono *perfettamente identici* a quelli che si aspetta lo script?
*   **GUARDA LA DIMENSIONE DEI FILE!** Questo è il test per Git LFS.
    *   **Se vedi dimensioni reali** (es. `98458342` per il file `.pth`, `2345` per i `.joblib`), allora il problema era un altro (magari un typo nel nome che ora noterai).
    *   **Se invece vedi dimensioni minuscole** (es. `133` bytes) per tutti i file, **hai trovato il colpevole: è Git LFS**. L'aggiunta di `lfs: true` al file YML dovrebbe risolvere il problema alla prossima esecuzione.

Questo metodo non lascia spazio a dubbi. Vedrai con i tuoi occhi ciò che il runner vede e potrai correggere la discrepanza esatta.
